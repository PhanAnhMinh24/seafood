plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group 'com.sales'
version '0.0.1-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter'
}

tasks.named('build') {
    dependsOn 'copyLibs'
}

def commonModules = ['swagger', 'authorization']

commonModules.each { module ->
    tasks.register("build${module.capitalize()}", GradleBuild) {
        dir = "../common/$module"
        tasks = ['build']
    }
}

tasks.register('copyLibs', Copy) {
    from commonModules.collect { "../common/$it/build/libs/" }
    into 'libs'
    include '*.jar'
    dependsOn commonModules.collect { "build${it.capitalize()}" }
}

test.dependsOn 'copyLibs'
compileTestJava.dependsOn 'copyLibs'
bootJar.dependsOn 'copyLibs'
compileJava.dependsOn 'copyLibs'

tasks.named('test') {
}
